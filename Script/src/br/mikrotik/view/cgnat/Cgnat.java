package br.mikrotik.view.cgnat;

import br.mikrotik.servicosIp.CgNat;
import br.mikrotik.view.Service.LimitNumber;
import br.mikrotik.view.Service.LimitTxt;
import br.mikrotik.view.Service.ValidaIp;
import com.sun.glass.events.KeyEvent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.


/**
 *
 * @author jackson
 */
public class Cgnat extends javax.swing.JInternalFrame {

    /**
     * Creates new form Main
     */
    LimitTxt form = new LimitTxt(2);
    LimitNumber limitNumber = new LimitNumber(4);
    ValidaIp validaIpPublico = new ValidaIp();
    
    ValidaIp validaIpPrivado = new ValidaIp();
    
    public Cgnat() {
        initComponents();
        
        txtPublico.setDocument(validaIpPublico);
        txtPrivado.setDocument(validaIpPrivado);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPrivado = new javax.swing.JTextField();
        txtQuatPublico = new javax.swing.JTextField();
        ipPublico = new java.awt.Label();
        ipPublico1 = new java.awt.Label();
        ipPublico2 = new java.awt.Label();
        txtPublico = new javax.swing.JTextField();
        lQuat = new java.awt.Label();
        txtPublico2 = new javax.swing.JTextField();
        lQuat1 = new java.awt.Label();
        lMaskPrivado = new java.awt.Label();
        lMaskPublico = new java.awt.Label();
        gerarScript = new javax.swing.JButton();
        txtMaskPublico = new javax.swing.JTextField();
        txtMaskPrivado = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setMaximumSize(new java.awt.Dimension(300, 400));
        setMinimumSize(new java.awt.Dimension(300, 400));

        txtPrivado.setText("100.64.0.0");
        txtPrivado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrivadoActionPerformed(evt);
            }
        });
        txtPrivado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPrivadoKeyPressed(evt);
            }
        });

        ipPublico.setName(""); // NOI18N
        ipPublico.setText("ID do Bloco privado");

        ipPublico1.setName(""); // NOI18N
        ipPublico1.setText("Bloco IP privado");
        ipPublico1.setVisible(false);

        ipPublico2.setName(""); // NOI18N
        ipPublico2.setText("ID do Bloco publico");

        txtPublico.setText("45.226.123.96");
        txtPublico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPublicoActionPerformed(evt);
            }
        });
        txtPublico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPublicoKeyPressed(evt);
            }
        });

        lQuat.setText("Quant.");

        lQuat1.setText("Quant.");

        lMaskPrivado.setText("Mask Privado");

        lMaskPublico.setText("Mask Publico");

        gerarScript.setText("Gerar Script");
        gerarScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerarScriptActionPerformed(evt);
            }
        });

        txtMaskPublico.setText("255.255.255.252");
        txtMaskPublico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaskPublicoKeyPressed(evt);
            }
        });

        txtMaskPrivado.setText("255.255.252.0");
        txtMaskPrivado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaskPrivadoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtMaskPrivado, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPublico, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(ipPublico1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lMaskPublico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ipPublico2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ipPublico, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtPrivado, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaskPublico))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPublico2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lQuat1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuatPublico, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lQuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(gerarScript)
                    .addComponent(lMaskPrivado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(148, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ipPublico2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPublico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(ipPublico1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lMaskPublico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaskPublico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(ipPublico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPrivado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lQuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQuatPublico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(lQuat1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPublico2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lMaskPrivado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMaskPrivado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(gerarScript)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPrivadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrivadoKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_BACKSPACE)
        {
            validaIpPrivado.backSpace();
            System.out.println("backspace digitada");
        }
    }//GEN-LAST:event_txtPrivadoKeyPressed

    private void txtPublicoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPublicoKeyPressed
        
        Thread count = new Thread()
        {
            @Override
            public void run() 
            {
                if(evt.getKeyCode() == KeyEvent.VK_BACKSPACE)
                {
                    validaIpPublico.backSpace();
                    System.out.println("backspace digitada");
                }
            }
        };
    }//GEN-LAST:event_txtPublicoKeyPressed

    private void gerarScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerarScriptActionPerformed

        
        CgNat script = new CgNat(txtPublico.getText(), txtMaskPublico.getText(),
                            txtPrivado.getText(), txtMaskPrivado.getText());
        

        script.sharePool(shareArquivo()+".txt");
        
        JOptionPane.showMessageDialog(null, "Script gerado com sucesso");
    }//GEN-LAST:event_gerarScriptActionPerformed
     /**
     * Função permite o usuario pesquisar um arquivo excel no PC, podendo
     * vasculhar arquivos disponivel. Podendo selecionar apenas arquivos xls.
     * @return String 
     * Caminho do arquivo.
     */
    public String shareArquivo() {
        FileNameExtensionFilter filter = null;
        
        String retorno = "";
        // Instancia um metodo FileChoose para abrir a tela de pesquisa no PC
        JFileChooser shareArq = new JFileChooser();
        // Defini um titulo a janela a ser aberta
        shareArq.setDialogTitle( "Salvar " );
        // Guarda o caminho do arquivo selecionado.
        shareArq.setFileSelectionMode(JFileChooser.FILES_ONLY);
        // Restringe o usuario a escolher somente arquivo Excel na extensão xls
        
            filter = new FileNameExtensionFilter("Texto","txt");
            FileNameExtensionFilter filterXls = filter;
            // Associa o filtro de seleção do arquivo ao FileChoose criado.
            shareArq.setFileFilter(filterXls);
        
        // Monitora se o usuario selecionou um arquivo ou nao. 
        int resposta = shareArq.showOpenDialog(this);
        // Se o usuario selecionou o arquivo, guarda o caminho dele na String 'retorno'
        if (resposta == JFileChooser.APPROVE_OPTION) {
            retorno = shareArq.getSelectedFile().toString();
        }
        // Se o usuario nao selecionou nenhum arquivo, é retornado uma String vazia.
        return retorno;
        
    }
    private void txtMaskPublicoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaskPublicoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaskPublicoKeyPressed

    private void txtMaskPrivadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaskPrivadoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaskPrivadoKeyPressed

    private void txtPublicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPublicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPublicoActionPerformed

    private void txtPrivadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrivadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrivadoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton gerarScript;
    private java.awt.Label ipPublico;
    private java.awt.Label ipPublico1;
    private java.awt.Label ipPublico2;
    private java.awt.Label lMaskPrivado;
    private java.awt.Label lMaskPublico;
    private java.awt.Label lQuat;
    private java.awt.Label lQuat1;
    private javax.swing.JTextField txtMaskPrivado;
    private javax.swing.JTextField txtMaskPublico;
    private javax.swing.JTextField txtPrivado;
    private javax.swing.JTextField txtPublico;
    private javax.swing.JTextField txtPublico2;
    private javax.swing.JTextField txtQuatPublico;
    // End of variables declaration//GEN-END:variables
}
